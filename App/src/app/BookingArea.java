/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import static app.DBConnection.getResult;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author rohit
 */
public class BookingArea extends javax.swing.JFrame {

    /**
     * Creates new form BookingArea
     */
    public BookingArea() {
        initComponents();
    }
    
    private String[] getCityList(){
        ResultSet RSet = getResult("SELECT DISTINCT City FROM room_info");
        ArrayList<String> cities = new ArrayList<>(); 
        try {
            while(RSet.next()){
                cities.add(RSet.getString("City"));
            }
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
        String[] city_names = cities.toArray(new String[0]);  
        for(int i=0;i<city_names.length;i++)
            System.out.println(city_names[i]);
        return city_names;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        City = new javax.swing.JComboBox<>();
        Search = new javax.swing.JButton();
        CheckInTimeLabel = new javax.swing.JLabel();
        CheckOutTimeLabel = new javax.swing.JLabel();
        AC = new javax.swing.JCheckBox();
        Wifi = new javax.swing.JCheckBox();
        CarRental = new javax.swing.JCheckBox();
        CompBF = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        City.setModel(new javax.swing.DefaultComboBoxModel(getCityList()));
        City.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityActionPerformed(evt);
            }
        });

        Search.setText("Go");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        CheckInTimeLabel.setText("CheckIn");

        CheckOutTimeLabel.setText("CheckOut");

        AC.setText("AC");

        Wifi.setText("WiFi");

        CarRental.setText("Car Rental");
        CarRental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarRentalActionPerformed(evt);
            }
        });

        CompBF.setText("Complimentary Breakfast");
        CompBF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompBFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(City, 0, 127, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CheckInTimeLabel)
                        .addGap(345, 345, 345)
                        .addComponent(Search)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Wifi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CarRental)
                        .addGap(161, 161, 161))))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(CompBF)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CheckOutTimeLabel)
                .addGap(219, 219, 219))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(City, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search)
                    .addComponent(CheckInTimeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CarRental)
                    .addComponent(Wifi)
                    .addComponent(AC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CompBF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(CheckOutTimeLabel)
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        String query= "SELECT * FROM room_info WHERE city=\""+City.getSelectedItem()+"\"";
        if(CompBF.isSelected()){
            query+=" AND COMP_BF = 1";
        }
        if(AC.isSelected()){
            query+=" AND AC = 1";
        }
        if(Wifi.isSelected()){
            query+=" AND WiFi = 1";
        }
        if(CarRental.isSelected()){
            query+=" AND Car_Rental = 1";
        }
        System.out.println(query);
        ResultSet RSet = getResult(query);
        try {
            while(RSet.next()){
                
            }
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void CarRentalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarRentalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CarRentalActionPerformed

    private void CompBFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompBFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CompBFActionPerformed

    private void CityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingArea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AC;
    private javax.swing.JCheckBox CarRental;
    private javax.swing.JLabel CheckInTimeLabel;
    private javax.swing.JLabel CheckOutTimeLabel;
    private javax.swing.JComboBox<String> City;
    private javax.swing.JCheckBox CompBF;
    private javax.swing.JButton Search;
    private javax.swing.JCheckBox Wifi;
    // End of variables declaration//GEN-END:variables
}
